{"version":3,"sources":["index.js"],"names":["buff","_0x2e9cce","Date","_0x232e29","_0xfdfff4","_0x24d2a1","parseInt","$","_0xfbd33d","_0x560b5e","_0x2fe844","_0x1c3c7b","_0x1ca93b","GetInternetTime","_0x4ca424","GetBeatTime","_0x18c35c","_0x18f84a","_0xe1125b","_0x3151c4","_0x25db35","_0x265e4d","_0x210b68","Math","GetCSTByBeatTime","_0x2fdb18","_0x50d9c5","pad0","_0x21347d","_0x2bc84e","getBeatPeriod","_0xdc3edd","_0x33d83","_0x237193","_0x5191fc","_0x439aed","_0x54aeda","setInterval","_0x5d3ce8","_0x8b9532"],"mappings":"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","sourcesContent":["// javascript-obfuscator index.js index.js.map --output  index.min.js\nfunction buff() {\n    // 2019-09-22 rare rate()\n    const epoch = new Date(2019, 9 - 1, 22)\n    epoch.setHours(8, 0, 0, 0);\n    epoch.setTime(epoch.getTime() /*+ epoch.getTimezoneOffset() * 60 * 1000*/)\n\n    const now = new Date();\n    let current = now.getTime();\n    let offset = parseInt(((now.getTime() - epoch.getTime()) / (24 * 60 * 60 * 1000)) / 7 % 4)\n\n    $('#buf li').each(function (idx, val) {\n        const id = $(this).attr(\"id\");\n        const matches = $(this).text().match(/\\d+/g);\n\n        // 2021 周年\n        const anniversaryEventEndDate = new Date(2021, 9 - 1, 4).getTime();\n        if (+current <= +anniversaryEventEndDate) {\n            $(this).css({'color': 'red', 'font-weight': 'bolder'});\n            if (id === \"0\") {\n                $(this).text($(this).text().replace(/\\d+/, +matches[0] + 10 + 15));\n            }\n            if (id === \"1\") {\n                $(this).text($(this).text().replace(/\\d+/, +matches[0] + 10));\n            }\n            if (id === \"3\") {\n                $(this).text($(this).text().replace(/\\d+/, +matches[0] + 10));\n            }\n            if (id === \"2\") {\n                $(this).text($(this).text().replace(/\\d+/, +matches[0] +50));\n            }\n        } /*else if (offset === parseInt(id)) {\n            $(this).css({'color': 'red', 'font-weight': 'bolder'});\n\n            // 2021 圣诞\n            var christEventEndDate = new Date(2021, 1 - 1, 9).getTime();\n            if (+current <= +christEventEndDate) {\n                $(this).text($(this).text().replace(/\\d+/, (+matches[0]) * 2));\n            }\n\n            // 2020 圣诞\n            // var christEventEndDate = new Date(2020, 1 - 1, 13).getTime();\n            // if (+current <= +christEventEndDate) {\n            //\n            //     $(this).text($(this).text().replace(/\\d+/, (+matches[0]) * 2));\n            // }\n\n            // 2020 复活节\n            // var easterEventEndDate = new Date(2020, 5 - 1, 10).getTime();\n            // if (+current <= +easterEventEndDate) {\n            //     $(this).text($(this).text().replace(/\\d+/, (+matches[0]) * 2));\n            // }\n        }\n\n        if ((+offset + 1) % 4 === parseInt(id)) {\n            $(this).css({'color': 'green', 'font-weight': 'bolder'});\n        }*/\n    })\n}\n\nfunction GetInternetTime() {\n    var beats = GetBeatTime();\n\n    if (parseInt(beats / 100) % 2 === 0) {\n        var len = beats.toString().length;\n        while (len++ < 3) {\n            beats = '0' + beats;\n        }\n        beats = '<span style=\"color: #47a447; font-weight: bolder; font-size: larger\">@' + beats + '</span>'\n\n        $('#hp-span').css({'color': 'green', 'font-weight': 'bold'});\n    } else {\n        beats = '<span style=\"color: #a49047; font-weight: bolder\">@' + beats + '</span>'\n\n        $('#hp-span').css('color', '')\n    }\n\n    // update page\n    $('#swatchTime').html(beats);\n}\n\nfunction GetBeatTime() {\n    // get date in UTC/GMT\n    var date = new Date();\n    var hours = date.getUTCHours();\n    var minutes = date.getUTCMinutes();\n    var seconds = date.getUTCSeconds();\n\n    // add hour to get time in Switzerland\n    hours = (hours === 23) ? 0 : hours + 1;\n\n    // time in seconds\n    var timeInSeconds = (((hours * 60) + minutes) * 60) + seconds;\n\n    // there are 86.4 seconds in a beat\n    var secondsInABeat = 86.4;\n\n    // calculate beats to two decimal places\n    // var beats = parseInt(timeInSeconds / secondsInABeat);\n    return Math.abs(timeInSeconds / secondsInABeat).toFixed(2);\n}\n\nfunction GetCSTByBeatTime(beattime) {\n    var c = new Date()\n    c.setHours(0)\n    c.setMinutes(0)\n    c.setSeconds(0)\n    return new Date(c.getTime() + beattime * 86.4 * 1000 + 3600 * 1000 * 7)\n}\n\nfunction pad0(unit, base) {\n    if (!!!base) {\n        base = 10;\n    }\n\n    if (base === 10) {\n        if (unit < 10) {\n            unit = '0' + unit;\n        }\n    } else if (base === 100) {\n        if (unit === 0) {\n            unit = '000'\n        } else if (unit < 10) {\n            unit = '00' + unit;\n        } else if (unit < 100) {\n            unit = '0' + unit;\n        }\n    }\n\n    return unit;\n}\n\n\n/*\n規格\n以Swatch總部（位於瑞士比爾市）的時間為基準時間，稱為「比爾標準時間（Biel Mean Time，縮寫為BMT）」，該地時間相當於中歐時區，也就是UTC+1。\n一律改採計算簡便的10進制，而非傳統的12進制及60進制混用。\n將原來的一天24小時劃分為1000個等份，各等份稱為一個「.Beat」（拍／角刻），因此一個Beat相當於86.4秒（=1分26.4秒）。另有一輔助單位「.cBeat」（分拍／毫刻），為Beat的1/100，即0.864秒。\n一天的起始時間（UTC+1時間的午夜0:00）記為「@000」，結束時間為「@999」，且皆以BMT為準，不像傳統時制有時區之別。因此除了傳統上與BMT同時區的地區之外，各地傳統的午夜0:00都不是@000。\n */\nfunction getBeatPeriod(start, end) {\n    var beats = GetBeatTime();\n\n    var d1 = new Date();\n    d1.setHours(0, 0, 0, 0);\n    d1.setTime(d1.getTime() + start * 86400 + 7 * 60 * 60 * 1000);\n\n    var d2 = new Date();\n    d2.setHours(0, 0, 0, 0);\n    d2.setTime(d2.getTime() + (end + 1) * 86400 + 7 * 60 * 60 * 1000 - 1000);\n\n\n    var raw = pad0(d1.getHours()) + ':' + pad0(d1.getMinutes()) + ':' + pad0(d1.getSeconds())\n        + ' ~ ' + pad0(d2.getHours()) + ':' + pad0(d2.getMinutes()) + ':' + pad0(d2.getSeconds())\n\n\n    raw = pad0(start, 100) + ' ~ ' + pad0(end, 100) + ' : ' + raw;\n\n    //\n    if (beats >= start && beats <= end) {\n        if (parseInt(beats / 100) % 2 === 0) {\n            return '<span style=\"color: #47a447; font-weight: bold\">' + raw + '</span>'\n        } else {\n            return '<span style=\"color: #a49047; font-weight: bold\">' + raw + '</span>'\n        }\n    }\n\n    return raw;\n}\n\n$(function () {\n    GetInternetTime();\n    setInterval(GetInternetTime, 1000);\n\n    buff();\n\n    var beat_even_period = \"<ul>\";\n    beat_even_period += \"<li>\" + getBeatPeriod(0, 99);\n    beat_even_period += \"<li>\" + getBeatPeriod(100, 199);\n    beat_even_period += \"<li>\" + getBeatPeriod(200, 299);\n    beat_even_period += \"<li>\" + getBeatPeriod(300, 399);\n    beat_even_period += \"<li>\" + getBeatPeriod(400, 499);\n    beat_even_period += \"<li>\" + getBeatPeriod(500, 599);\n    beat_even_period += \"<li>\" + getBeatPeriod(600, 699);\n    beat_even_period += \"<li>\" + getBeatPeriod(700, 799);\n    beat_even_period += \"<li>\" + getBeatPeriod(800, 899);\n    beat_even_period += \"<li>\" + getBeatPeriod(900, 999);\n    beat_even_period += \"</ul>\";\n\n    $('#beat_even_period').html(beat_even_period);\n\n    var galatine_even_period = \"<ul>\";\n    galatine_even_period += \"<li>\" + getBeatPeriod(0, 124) + \" - 0.33x (110-140)\";\n    galatine_even_period += \"<li>\" + getBeatPeriod(125, 249) + \" - 0.5x (165-210)\";\n    galatine_even_period += \"<li>\" + getBeatPeriod(250, 374) + \" - 1x (330-420)\";\n    galatine_even_period += \"<li>\" + getBeatPeriod(375, 499) + \" - 2x (660-840)\";\n    galatine_even_period += \"<li>\" + getBeatPeriod(500, 624) + \" - 3x (990-1260)\";\n    galatine_even_period += \"<li>\" + getBeatPeriod(625, 749) + \" - 2x (660-840)\";\n    galatine_even_period += \"<li>\" + getBeatPeriod(750, 874) + \" - 1x (330-420)\";\n    galatine_even_period += \"<li>\" + getBeatPeriod(875, 999) + \" - 0.5x (165-210)\";\n    galatine_even_period += \"</ul>\";\n\n    $('#galatine_even_period').html(galatine_even_period);\n});"]}